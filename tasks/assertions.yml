


#
#    Assertions to check before starting
#    configuration of the bastion server
#
#    These should run on the controller before
#    anything is deployed
#



- delegate_to: localhost
  run_once: true
  block:

      - debug:
         msg: 
           - "########################################"
           - "Assert Tests"
           - "  OCP Version             = {{ xtoph_ocp4.ocp.version }}"
           - "  UPI Strapless Mode      = {{ xtoph_ocp4.ocp.strapless }}"
           - "  Assisted Installer      = {{ xtoph_ocp4.bastion.assisted_installer }}"
           - "  Assisted Installer SNO  = {{ xtoph_ocp4.ocp.sno }}"
           - "  Node Counts"
           - "    Bootstrap         = {{ xtoph_ocp4._cluster_bootstrap | length }}"
           - "    BootstrapFlipFlop = {{ xtoph_ocp4._cluster_bootstrap_flipflop | length }}"
           - "    Masters           = {{ xtoph_ocp4._cluster_masters | length }}"
           - "    Workers           = {{ xtoph_ocp4._cluster_workers | length }}"
           - "    SNO               = {{ xtoph_ocp4._cluster_sno | length }}"

      - name: "xtoph_ocp4 : assertions : look for Pull Secret"
        stat: 
          path: "{{ inventory_dir }}/pull-secret.txt"
        register: found_secret

      - name: "xtoph_ocp4 : assertions : look for OCM Token"
        stat: 
          path:  "{{ inventory_dir }}/ocm-token.txt"
        register: found_token
      
      - name: "xtoph_ocp4 : assertions : confirm Pull Secret"
        ansible.builtin.assert:
          success_msg: 'Pull Secret Found'
          fail_msg:    
            - 'Please download and put a copy of your Pull Secret in {{ inventory_dir }}'
            - 'RETRIEVE PULL-SECRET from: https://cloud.redhat.com/openshift/install/metal/user-provisioned'
            - 'SAVE PULL-SECRET here: ./config/pull-secret.txt'
          that:
            - found_secret.stat.exists

      - name: "xtoph_ocp4 : assertions : confirm OCM Token"
        ansible.builtin.assert:
          success_msg: 'OCM Token Found'
          fail_msg:    
            - 'Please download and put a copy of your OCM Token in {{ inventory_dir }}'
            - 'RETRIEVE PULL-SECRET from: https://cloud.redhat.com/openshift/token'
            - 'SAVE PULL-SECRET here: ./config/ocm-token.txt'
          that:
            - found_token.stat.exists
        when:
          - xtoph_ocp4.bastion.assisted_installer is defined
          - xtoph_ocp4.bastion.assisted_installer == true

      - name: "xtoph_ocp4 : config-bastion-assertions : validate server count for traditional UPI"
        ansible.builtin.assert: 
          success_msg: 'Node Count Is Sufficient'
          fail_msg:    'Node Count INSUFFICIENT: UPI install requires 1 boostrap and 3 masters'
          that:
            - xtoph_ocp4._cluster_bootstrap | length == 1
            - xtoph_ocp4._cluster_bootstrap_flipflop | length == 0
            - xtoph_ocp4._cluster_masters | list == 3
            - xtoph_ocp4._cluster_workers | list >= 0
            - xtoph_ocp4._cluster_sno | length == 0
        when:
          - xtoph_ocp4.bastion.assisted_installer == False
          - xtoph_ocp4.ocp.strapless == False

      - name: "xtoph_ocp4 : config-bastion-assertions : validate server count for strapless UPI (OCP < 4.11)"
        ansible.builtin.assert: 
          success_msg: 'Node Count Is Sufficient'
          fail_msg:    'Node Count INSUFFICIENT: strapless UPI install requires 3 masters and 1+ workers'
          that:
            - xtoph_ocp4._cluster_bootstrap | length == 0
            - xtoph_ocp4._cluster_bootstrap_flipflop | length == 1
            - xtoph_ocp4._cluster_masters | length == 3
            - xtoph_ocp4._cluster_workers | length >= 1
            - xtoph_ocp4._cluster_sno | length == 0
        when:
          - xtoph_ocp4.bastion.assisted_installer == False
          - xtoph_ocp4.ocp.strapless == True
          - xtoph_ocp4.ocp.version is version('4.11',operator='<')

      - name: "xtoph_ocp4 : config-bastion-assertions : validate server count for strapless UPI (OCP >= 4.11)"
        ansible.builtin.assert: 
          success_msg: 'Node Count Is Sufficient'
          fail_msg:    'Node Count INSUFFICIENT: strapless UPI install requires 3 masters and 0+ workers'
          that:
            - xtoph_ocp4._cluster_bootstrap | length == 0
            - xtoph_ocp4._cluster_bootstrap_flipflop | length == 1
            - xtoph_ocp4._cluster_masters | length == 3
            - xtoph_ocp4._cluster_workers | length >= 0
            - xtoph_ocp4._cluster_sno | length == 0
        when:
          - xtoph_ocp4.bastion.assisted_installer == False
          - xtoph_ocp4.ocp.strapless == True
          - xtoph_ocp4.ocp.version is version('4.11',operator='>=')
            
      - name: "xtoph_ocp4 : config-bastion-assertions : validate server count for assisted installer (AI)"
        ansible.builtin.assert: 
          success_msg: 'Node Count Is Sufficient'
          fail_msg:    'Node Count INSUFFICIENT: AI install requires 3 masters, 0+ workers and OCP >= 4.9'
          that:
            - xtoph_ocp4._cluster_bootstrap | length == 0
            - xtoph_ocp4._cluster_bootstrap_flipflop | length == 0
            - xtoph_ocp4._cluster_masters | length == 3
            - xtoph_ocp4._cluster_workers | length >= 0
            - xtoph_ocp4._cluster_sno | length == 0
            - xtoph_ocp4.ocp.version is version('4.9',operator='>=')
        when:
          - xtoph_ocp4.bastion.assisted_installer == True
          - xtoph_ocp4.ocp.sno == False

      - name: "xtoph_ocp4 : config-bastion-assertions : validate server count for assisted installer single node (AI-SNO)"
        ansible.builtin.assert: 
          success_msg: 'Node Count Is Sufficient'
          fail_msg:    'Node Count INSUFFICIENT: AI-SNO install requires 1 SNO node and OCP >= 4.9'
          that:
            - xtoph_ocp4._cluster_bootstrap | length == 0
            - xtoph_ocp4._cluster_bootstrap_flipflop | length == 0
            - xtoph_ocp4._cluster_masters | length == 0
            - xtoph_ocp4._cluster_workers | length == 0
            - xtoph_ocp4._cluster_sno | length == 1
            - xtoph_ocp4.ocp.version is version('4.9',operator='>=')
        when:
          - xtoph_ocp4.bastion.assisted_installer == True
          - xtoph_ocp4.ocp.sno == True

