
- delegate_to: "{{ xtoph_ocp4.bastion.host_fqdn }}"
  run_once: true
  block:

      - name: "xtoph_ocp4 : config-bastion-ocp-prep : Create ssh directory"
        file:
          path: /root/.ssh
          mode: "0700"
          state: directory
      
      - name: "xtoph_ocp4 : config-bastion-ocp-prep : test ssh key"
        stat: path="/root/.ssh/id_rsa.pub"
        register: test_ssh_key
      
      - name: "xtoph_ocp4 : config-bastion-ocp-prep : create ssh key"
        command: "ssh-keygen -t rsa -b 2048 -N '' -f /root/.ssh/id_rsa"
        when: test_ssh_key.stat.exists == false
      


      - block:

            # 
            #    Clean up installation artifacts
            #

            - name: "xtoph_ocp4 : config-bastion-ocp-prep : Back-up openshift installation artifacts in {{ xtoph_ocp4.ocp.creds_dir }}"
              shell:
                cmd: |
                  if [[ -d "{{ xtoph_ocp4.ocp.creds_dir }}" ]]; 
                    then mv -f "{{ xtoph_ocp4.ocp.creds_dir }}" "{{ xtoph_ocp4.ocp.creds_dir }}".`date +"%Y%m%d-%R"`
                  fi
                removes: "{{ xtoph_ocp4.ocp.creds_dir }}"
        
            - name: "xtoph_ocp4 : config-bastion-ocp-prep : Clean-up kube artifacts in /root/.kube"
              file:
                path: "/root/.kube"
                state: absent
        
            - name: "xtoph_ocp4 : config-bastion-ocp-prep : Create openshift working directory {{ xtoph_ocp4.ocp.creds_dir }}"
              file:
                path: "{{ item }}"
                mode: "0755"
                state: directory
              with_items:
                - "{{ xtoph_ocp4.ocp.creds_dir }}"
                - "{{ xtoph_ocp4.ocp.creds_dir }}/auth"

        when: workshop_lock == false
          

      
      #
      #    Track down the pull secret
      #
      #      if    deploying via the xtoph_deploy, pull_secret may already be deployed
      #      else  could be in the ./config directory 
      #      else  this is a manual step user must complete therefore show message and exit
      #
      
      - name: "xtoph_ocp4 : config-bastion-ocp-prep : hunt for pull-secret"
        copy:
          src:   "{{ item }}" 
          dest:  "{{ xtoph_ocp4.ocp.creds_dir }}/pull-secret.txt"
          mode:  "0644"
          owner: root
          group: root
        ignore_errors: yes
        with_items:
          - "../config/pull-secret.txt" 
          - "/root/{{ xtoph_ocp4.ocp.clustername }}-pull-secret.txt" 
        
      - name: "xtoph_ocp4 : config-bastion-ocp-prep : confirm pull-secret"
        stat: path="{{ xtoph_ocp4.ocp.creds_dir }}/pull-secret.txt"
        register: found_secret
  
      - block:
            - debug: msg="RETRIEVE PULL-SECRET https://cloud.redhat.com/openshift/install/metal/user-provisioned"
            - debug: msg="SAVE PULL-SECRET HERE ./config/pull-secret.txt"
            - fail:  msg="MISSING PULL-SECRET"
        when: found_secret.stat.exists == false
      

        
      #
      #    Track down offline token ONLY if assisted_installer = true
      #

      - block:

            - name: "xtoph_ocp4 : config-bastion-ocp-prep : hunt for ocm offline token"
              copy:
                src:   "{{ item }}" 
                dest:  "{{ xtoph_ocp4.ocp.creds_dir }}/ocm-token.txt"
                mode:  "0644"
                owner: root
                group: root
              ignore_errors: yes
              with_items:
                - "../config/ocm-token.txt"
                - "/root/{{ xtoph_ocp4.ocp.clustername }}-ocm-token.txt"
        
            - name: "xtoph_ocp4 : config-bastion-ocp-prep : confirm ocm offline token"
              stat: path="{{ xtoph_ocp4.ocp.creds_dir }}/ocm-token.txt"
              register: found_secret
        
            - block:
                  - debug: msg="RETRIEVE OCM OFFLINE TOKEN https://cloud.redhat.com/openshift/token "
                  - debug: msg="SAVE PULL-SECRET HERE ./config/ocm-token.txt"
                  - fail:  msg="MISSING OCM OFFLINE TOKEN"
              when: found_secret.stat.exists == false

        when: xtoph_ocp4.bastion.assisted_installer == true

              

      #
      #    Install OCP Client software
      #

      - name: "xtoph_ocp4 : config-bastion-ocp-prep : download ocp client software [SRC: {{ xtoph_ocp4.ocp_assets.url }}]"
        environment:
          http_proxy:  "{{ xtoph_ocp4.ocp.http_proxy| default('') }}"
          https_proxy: "{{ xtoph_ocp4.ocp.https_proxy| default('') }}"
        get_url:
          url: "{{ xtoph_ocp4.ocp_assets.url }}/{{ item }}"
          dest: "/usr/local/src/{{ item }}"
          mode: "0644"
        with_items:
          - "{{ xtoph_ocp4.ocp_assets.client_tar }}"
        register: openshift_download
        until: openshift_download is not failed
        retries: 5
      
      - name: "xtoph_ocp4 : config-bastion-ocp-prep : unpack ocp client software"
        shell:
          cmd: |
            cd /usr/local/bin
            tar zxvf /usr/local/src/{{ item }}
        with_items:
          - "{{ xtoph_ocp4.ocp_assets.client_tar }}"
      
      - name: "xtoph_ocp4 : config-bastion-ocp-prep : additional package installation"
        yum: name=bash-completion state=installed
      
      - name: "xtoph_ocp4 : config-bastion-ocp-prep : configure ocp client bash completion"
        shell: 
          cmd: |
            /usr/local/bin/oc completion bash >> /etc/bash_completion.d/oc_completion



