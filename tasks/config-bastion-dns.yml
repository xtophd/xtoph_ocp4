


- delegate_to: "{{ xtoph_ocp4.bastion.host_fqdn }}"
  run_once: true
  block:



      - name: "xtoph_ocp4 : config-bastion-dns : populate service facts"
        service_facts:



      #
      #    Package installation
      #
      
      - name: "xtoph_ocp4 : config-bastion-dns : package installation"
        yum: name=dnsmasq state=installed



      #
      #    NOTE: This project does NOT play nice with other projects
      #          that monkey with dnsmasq configs.  Bastion host
      #          should be a dedicated system for openshift.
      #    
      #    Cleanup any previous dnsmasq configs, IPs and hostnames   
      #    
      
      - name: "xtoph_ocp4 : config-bastion-dns : clean cfg directory"
        shell:
          cmd: |
            if [[ -d "/etc/dnsmasq.d" ]] ; then rm -rf /etc/dnsmasq.d/* ; fi



      #
      #    Put a friendly note in /etc/hosts to 
      #    inform people that the config parameters
      #    are in /etc/dnsmasq.d
      #
 
      - name: "xtoph_ocp4 : config-bastion-dns : add comment to /etc/hosts"
        blockinfile:
          dest:   "/etc/hosts"
          insertbefore: BOF
          block: |
            ##
            ## NOTE - only IP and NAMES for OCP cluster nodes are in /etc/hosts
            ## NOTE - additional PTR,CNAME, SVR and WILCARDS  are in /etc/dnsmasq.d/
            ## NOTE - resolv.conf should point to localhost 127.0.0.1
            ##
          state:  present



      #
      #    We need to disable networkmanager 
      #    from toying with /etc/resolv.conf
      #

      - name: "xtoph_ocp4 : config-bastion-dns : disable network-manager /etc/resolv.conf adjustments"
        template:
          src:   "dns-resolv-fix.j2"
          dest:  "/etc/NetworkManager/conf.d/90-dns-none.conf"
          owner: root
      
      - name: "xtoph_ocp4 : config-bastion-dns : restart networkmanager service"
        service: name=NetworkManager state=reloaded enabled=yes



      #
      #    Ddeploy a /etc/resolv.conf that 
      #    points to our bastion dns server
      #
 
      - name: "xtoph_ocp4 : config-bastion-dns : deploy resolv.conf"
        vars: 
          - p_search:     "{{ xtoph_ocp4.ocp.basedomain }} {{ xtoph_ocp4.ocp.cluster_fqdn }}"
          - p_nameserver: "127.0.0.1"
        template:
          src:   "dns-resolv-conf.j2"
          dest:  "/etc/resolv.conf"
          owner: root

      #
      #    Deploy a standard options, api and wildcard configs
      #

      - name: "xtoph_ocp4 : config-bastion-dns : deploy STANDARD options, API and WILDCARD"
        vars:
          - p_clustername:     "{{ xtoph_ocp4.ocp.clustername }}"
          - p_nameServer:      "{{ xtoph_ocp4.network.nameserver }}"
          - p_domain:          "{{ xtoph_ocp4.ocp.basedomain }}"
          - p_cluster_fqdn:    "{{ xtoph_ocp4.ocp.cluster_fqdn }}"
          - p_wildcard:        "{{ xtoph_ocp4.ocp.wildcard_fqdn }}"
          - p_addr:            "{{ xtoph_ocp4.bastion.host_ip }}"
          - p_revAddr:         "{{ (p_addr.split('.'))[::-1]|join('.') }}"
          - p_cluster_addr:    "{{ xtoph_ocp4.ocp.vip_cluster }}"
          - p_cluster_revAddr: "{{ (p_cluster_addr.split('.'))[::-1]|join('.') }}"
          - p_api_addr:        "{{ xtoph_ocp4.ocp.vip_api }}"
          - p_api_revAddr:     "{{ (p_api_addr.split('.'))[::-1]|join('.') }}"
        template:
          src:   "{{ item.src }}"
          dest:  "{{ item.dest }}"
          owner: root
          group: root
          mode:  644
        with_items:
          - { src: "dnsmasq-standard-opts.j2",  dest: "/etc/dnsmasq.d/30-standard-opts.conf" }
          - { src: "dnsmasq-api-entry.j2",      dest: "/etc/dnsmasq.d/55-{{ p_cluster_fqdn }}-api.conf" }
          - { src: "dnsmasq-wildcard-entry.j2", dest: "/etc/dnsmasq.d/45-{{ p_cluster_fqdn }}-wildcard.conf" }

      #
      #    Nodes: get simple entry in /etc/hosts
      #

      - name: "xtoph_ocp4 : config-bastion-dns : cleanup conflicting IP in /etc/hosts"
        throttle: 1
        run_once: false
        lineinfile:
          dest:   "/etc/hosts"
          regexp: "{{ h_pubIP }} .*$"
          state:  absent

      - name: "xtoph_ocp4 : config-bastion-dns : cleanup conflicting name in /etc/hosts"
        throttle: 1
        run_once: false
        lineinfile:
          dest:   "/etc/hosts"
          regexp: ".*{{ inventory_hostname }}.*"
          state:  absent

      - name: "xtoph_ocp4 : config-bastion-dns : add entry in /etc/hosts"
        throttle: 1
        run_once: false
        lineinfile:
          dest:   "/etc/hosts"
          line:   "{{ h_pubIP }} {{ inventory_hostname }}"
          state:  present
          insertbefore: "^127.0.0.1.*"


      #
      #    In order to maintain compatability with OCP version < 4.4, 
      #    we need to create a few special records for etcd.
      #    After the release of version 4.4, this is no longer necessary
      #
      #    NOTE: we use run_once in combination with a loop index to
      #          to generate the appropriate etcd-index
      #
    
      - name: "xtoph_ocp4 : config-bastion-dns : deploy CLUSTER ETCD srv entries for OCP versions < 4.4"
        vars:
          - p_addr:        "{{ hostvars[item]['h_pubIP'] }}"
          - p_domain:      "{{ xtoph_ocp4.ocp.cluster_fqdn }}"
          - p_etcdName:    "etcd-{{ p_index }}"
        template:
          src: "dnsmasq-etcd-entry.j2"
          dest: "/etc/dnsmasq.d/45-{{p_domain}}-{{ p_etcdName }}.conf"
          owner: root
          group: root
          mode: 644
        when: xtoph_ocp4.ocp.version is version('4.4',operator='<')
        loop: "{{ xtoph_ocp4._cluster_masters }}"
        loop_control: 
          index_var: p_index

      #
      #    Last couple of items:
      #
      #      disable nscd       dnsmasq already performs caching
      #      firewall rules     add 'dns' to firewalld if firewalld is enabled
      #      systemd overrides  add restart=always to dnsmasq service
      #      service restart    
      #
      
      - name: "xtoph_ocp4 : config-bastion-dns : service disable"
        service:
          name: "{{ item }}"
          enabled: no
          state: stopped
          masked: no
        when: 
          - ansible_facts['services']['nscd.service']['state'] is defined
        with_items:
          - 'nscd.socket'
          - 'nscd.service'

      - name: "xtoph_ocp4 : config-bastion-dns : firewalld add service dns"
        firewalld:
          service: dns
          immediate: yes
          permanent: yes
          state: enabled
        when: 
          - ansible_facts['services']['firewalld.service']['state'] is defined
          - ansible_facts['services']['firewalld.service']['state'] == 'running'

      - name: "xtoph_ocp4 : config-bastion-dns : create systemd override directory"
        file:
          path: /etc/systemd/system/dnsmasq.service.d
          mode: "0755"
          state: directory
      
      - name: "xtoph_ocp4 : config-bastion-dns : deploy systemd override config"
        template:
          src: "dnsmasq-systemd-overrides.j2"
          dest: "/etc/systemd/system/dnsmasq.service.d/overrides.conf"
          owner: root
          group: root
          mode: 644
      
      - name: "xtoph_ocp4 : config-bastion-dns : service restart dnsmasq "
        service: 
           name: dnsmasq 
           state: restarted 
           enabled: yes 
           daemon_reload: yes



