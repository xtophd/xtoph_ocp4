


- delegate_to: "{{ xtoph_ocp4.bastion.host_fqdn }}"
  run_once: true
  block:

      #
      #    Run this block only if install method 
      #    is UPI (not assisted_installer AI)
      #

      - debug:
          msg:
            - "DEBUG: ***"
            - "DEBUG: *** PREINSTALL-NODE: {{ inventory_hostname }}"
            - "DEBUG: *** {{ xtoph_ocp4_action }} /  {{ xtoph_ocp4_subaction | default('') }}"
            - "DEBUG: ***"



      #
      # bootstrap (flip)
      #

      - block:

            #
            #    generic set of tests to verify bastion 
            #    services are up prior to starting
            #    bootstrap deployment
            #

            - name: "xtoph_ocp4 : preinstall-node (bootstrap) : test DNS port on bastion"
              when: xtoph_ocp4.bastion.dns == true
              wait_for:
                host: "{{ xtoph_ocp4.bastion.host_fqdn }}"
                connect_timeout: 5
                delay: 3
                port: 53 
                sleep: 1
                state: started
                timeout: 30
          
            - name: "xtoph_ocp4 : preinstall-node (bootstrap) : test MATCHBOX port on bastion"
              when: xtoph_ocp4.bastion.matchbox == true
              wait_for:
                host: "{{ xtoph_ocp4.bastion.host_fqdn }}"
                connect_timeout: 5
                delay: 3
                port: "{{ xtoph_ocp4.bastion.matchbox_port }}"
                sleep: 1
                state: started
                timeout: 30

            - block:

                  #    
                  #    Here we 'flip' either a worker's or master's normal ignition with     
                  #    bootstrap.ign.  Now the flipped node will be the bootstrap.
                  #    When the control plane is online, we 'flop' back
                  #    and redeploy (search 'bootstrap-flop' below)
                  #
                  #        NOTE: flipping a master only works with OCP > 4.11
                  #

                  - name: "xtoph_ocp4 : preinstall-node (bootstrap-flip) : flip worker node profile to bootstrap"
                    vars:
                      - t_profile:   "worker"
                      - t_name:      "{{ inventory_hostname_short }}"
                    replace:
                      path:    "/var/lib/matchbox/profiles/{{ t_profile }}-{{ t_name }}.json"
                      regexp:  '(.*)worker\.ign(.*)'
                      replace: '\1bootstrap.ign\2'
                    when:
                      - inventory_hostname in xtoph_ocp4._cluster_workers 

                  - name: "xtoph_ocp4 : preinstall-node (bootstrap-flip) : flip master node profile to bootstrap"
                    vars:
                      - t_profile:   "master"
                      - t_name:      "{{ inventory_hostname_short }}"
                    replace:
                      path:    "/var/lib/matchbox/profiles/{{ t_profile }}-{{ t_name }}.json"
                      regexp:  '(.*)master\.ign(.*)'
                      replace: '\1bootstrap.ign\2'
                    when:
                      - inventory_hostname in xtoph_ocp4._cluster_masters 

                  - name: "xtoph_ocp4 : preinstall-node (bootstrap-flip) : enable and restart matchbox service"
                    service: 
                      name: "matchbox" 
                      state: restarted 
                      enabled: yes 

              when:
                - inventory_hostname in xtoph_ocp4._cluster_masters or
                  inventory_hostname in xtoph_ocp4._cluster_workers 
      
        when: 
          - inventory_hostname in xtoph_ocp4._cluster_bootstrap or
            inventory_hostname in xtoph_ocp4._cluster_bootstrap_flipflop
          - xtoph_ocp4_subaction is defined and xtoph_ocp4_subaction == "preinstall-bootstrap"


      # 
      # masters
      # 

      - block:

            #
            #    Because the bootstrap disables itself once
            #    masters are online, test if masters already 
            #    provide config-service.  Otherwise, you
            #    wind up waiting for the bootstrap which will
            #    never come.
            #
      
            - name: "xtoph_ocp4 : preinstall-node (master) : verify CONFIG SERVER port on masters is NOT active"
              ignore_errors: true
              wait_for:
                host: "{{ item }}"
                connect_timeout: 5 
                delay: 3
                port: "22623"
                sleep: 1
                state: started
                timeout: 15
              register: config_service_master
              loop: "{{ xtoph_ocp4._cluster_masters | difference(xtoph_ocp4._cluster_bootstrap_flipflop) }}"
      
            - debug: var=config_service_master
              when: xtoph_ocp4._debug == true
      
            #
            #    wait here until BOOTSTRAP provides config-service, 
            #    unless masters are already online providing config-service
            #
      
            - name: "xtoph_ocp4 : preinstall-node (master) : wait for  CONFIG SERVER port on bootstrap"
              run_once: true
              wait_for:
                host: "{{ item }}"
                connect_timeout: 5
                delay: 3
                port: "22623"
                sleep: 1
                state: started
                timeout: 1800 
              register: config_service_bootstrap
              loop: "{{ xtoph_ocp4._cluster_bootstrap + xtoph_ocp4._cluster_bootstrap_flipflop }}"
              when: config_service_master.failed is defined
      
            - debug: var=config_service_bootstrap
              when: xtoph_ocp4._debug == true

        when: 
          - inventory_hostname in xtoph_ocp4._cluster_masters
          - inventory_hostname not in xtoph_ocp4._cluster_bootstrap_flipflop
          - xtoph_ocp4_subaction is defined and xtoph_ocp4_subaction == "preinstall-masters"



      #
      #  bootstrap (flop)
      #

      - block:

            - name: "xtoph_ocp4 : preinstall-node (bootstrap-flop) :  wait for config-service shutdown on bootstrap"
              wait_for:
                host: "{{ hostvars[item]['h_pubIP'] }}"
                connect_timeout: 5
                delay: 3
                port: 22623
                sleep: 5
                state: stopped
                timeout: 1800
              loop: "{{ xtoph_ocp4._cluster_bootstrap_flipflop }}"

            - name: "xtoph_ocp4 : preistall-node (bootstrap-flop) : issue graceful shutdown to bootstrap"
              delegate_to: "{{ xtoph_ocp4.bastion.host_fqdn }}"
              shell:
                cmd: |
                  ssh core@{{ inventory_hostname }} sudo systemctl -f poweroff

            - name: "xtoph_ocp4 : preinstall-node (bootstrap-flop) : wait for OCP node systemd port stopped"
              wait_for:
                host: "{{ inventory_hostname }}"
                connect_timeout: 3
                port: 111
                sleep: 5
                state: stopped
                timeout: 180
              ignore_errors: yes

            - name: "xtoph_ocp4 : preinstall-node (bootstrap-flop) : revert worker node profile back to worker.ign"
              vars:
                - t_profile:   "worker"
                - t_name:      "{{ inventory_hostname_short }}"
              replace:
                path:    "/var/lib/matchbox/profiles/{{ t_profile }}-{{ t_name }}.json"
                regexp:  '(.*)bootstrap\.ign(.*)'
                replace: '\1worker.ign\2'
              when:
                - inventory_hostname in xtoph_ocp4._cluster_workers

            - name: "xtoph_ocp4 : preinstall-node (bootstrap-flop) : revert master node profile back to master.ign"
              vars:
                - t_profile:   "master"
                - t_name:      "{{ inventory_hostname_short }}"
              replace:
                path:    "/var/lib/matchbox/profiles/{{ t_profile }}-{{ t_name }}.json"
                regexp:  '(.*)bootstrap\.ign(.*)'
                replace: '\1master.ign\2'
              when:
                - inventory_hostname in xtoph_ocp4._cluster_masters

            - name: "xtoph_ocp4 : preinstall-node (bootstrap-flop) : enable and restart matchbox service"
              service: 
                name: "matchbox" 
                state: restarted 
                enabled: yes 

        when:
          - inventory_hostname in xtoph_ocp4._cluster_bootstrap_flipflop
          - xtoph_ocp4_subaction is defined and xtoph_ocp4_subaction == "preinstall-bootstrap-flop"



      ##
      ##  workers
      ##

      - block:

            #
            #    wait here until MASTERS provide config-service 
            #
      
            - name: "xtoph_ocp4 : preinstall-node : (worker) wait for availability of config-server on masters"
              wait_for:
                host: "{{ hostvars[item]['h_pubIP'] }}"
                connect_timeout: 5
                delay: 3
                port: 22623
                sleep: 5
                state: started
                timeout: 1800
              loop: "{{ xtoph_ocp4._cluster_masters | difference(xtoph_ocp4._cluster_bootstrap_flipflop) }}"

        when: 
          - inventory_hostname in xtoph_ocp4._cluster_workers 
          - xtoph_ocp4_subaction is defined and xtoph_ocp4_subaction == "preinstall-workers"



  when: xtoph_ocp4.bastion.assisted_installer is undefined or
        xtoph_ocp4.bastion.assisted_installer == false



