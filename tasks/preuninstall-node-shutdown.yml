- delegate_to: "{{ xtoph_ocp4.bastion.host_fqdn }}"
  run_once: true
  block:

      #
      #    Proceed with ai cleanup if bastion is up
      #

      - name: "xtoph_ocp4 : preunistall-node-shutdown : test if node is accessible"
        delegate_to: localhost
        wait_for:
          host: "{{ inventory_hostname }}"
          connect_timeout: 5
          port: 22
          sleep: 1
          state: started
          timeout: 10
        register: ssh_status
        ignore_errors: yes

      #
      #    If this is an assisted-installer 
      #    we have a chance to clean up cluster configuration
      #    in the AI portal
      #

      - name: "xtoph_ocp4 : preunistall-node-shutdown : check for ocm offline token"
        stat:
          path: "{{ xtoph_ocp4.ocp.creds_dir }}/ocm-token.txt"
        register: token_test
        when: ssh_status is not failed

      - name: "xtoph_ocp4 : preunistall-node-shutdown : load ocm offline token"
        shell: cat {{ xtoph_ocp4.ocp.creds_dir }}/ocm-token.txt
        register: ocm_token
        when:  
          - ssh_status is not failed
          - token_test.stat.exists

      - name: "xtoph_ocp4 : preunistall-node-shutdown : delete cluster configuration (ignore error if it does not)"
        shell:
          cmd: |
            aicli --offlinetoken {{ ocm_token.stdout|quote }}      \
                delete cluster {{ xtoph_ocp4.ocp.clustername }} -y
        ignore_errors: true
        when: 
          - ssh_status is not failed
          - token_test.stat.exists

  when:
    - xtoph_ocp4.bastion.assisted_installer == true





- delegate_to: localhost 
  block:

      #
      #    Remove the openshift deployment lock
      #

      - name: "xtoph_ocp4: config-bastion-ocp-unlock : remove lock ({{ workshop_extras.ocp_creds_dir }}/xtoph_ocp4_deployment.lock)"
        run_once: true
        file:
          path:  "{{ xtoph_ocp4.ocp.creds_dir }}/xtoph_ocp4_deployment.lock"
          state: absent

      #
      #    Proceed with node shutdown if it is up, and wait
      #

      - name: "xtoph_ocp4 : preunistall-node-shutdown : test existence of node via ssh port"
        wait_for:
          host: "{{ inventory_hostname }}"
          connect_timeout: 5
          port: 22
          sleep: 1
          state: started
          timeout: 10
        register: ssh_status
        ignore_errors: yes

      - name: "xtoph_ocp4 : preunistall-node-shutdown : issue gracefull OCP node shutdown"
        delegate_to: "{{ xtoph_ocp4.bastion.host_fqdn }}"
        shell:
          cmd: |
            ssh core@{{ inventory_hostname }} nohup 'sleep 3 && sudo shutdown -h now' &
        when: ssh_status is not failed

      - name: "xtoph_ocp4 : preunistall-node-shutdown : wait for OCP node systemd port stopped"
        wait_for:
          host: "{{ inventory_hostname }}"
          connect_timeout: 3
          port: 111
          sleep: 5
          state: stopped
          timeout: 180
        ignore_errors: yes
        when: ssh_status is not failed

  rescue:
      - debug: msg="node {{inventory_hostname}} is already down"



