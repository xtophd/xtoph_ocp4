


- delegate_to: "{{ xtoph_ocp4.bastion.host_fqdn }}"
  throttle: 1
  block:


      ##
      ##    For every node in cluster: 
      ##      until ( node == ready )
      ##       scan for pending CSR's
      ##       approve pending CSR's
      ##       sleep
      ##



      - name: "xtoph_ocp4 : postinstall-cluster : watch until all nodes 'Ready', approve CSRs as needed"
        shell:
          cmd: |
            export KUBECONFIG={{ workshop_extras.ocp_creds_dir }}/auth/kubeconfig
            if [[ `{{ oc_cmd }} get node --no-headers {{ inventory_hostname_short }}.{{ xtoph_ocp4.ocp.cluster_fqdn }} | awk '{print $2}'` == "Ready" ]] ; then
              exit 0
            else
              for i in `{{ oc_cmd }} get csr | grep -i pending | awk '{print $1}'`; do 
                {{ oc_cmd }} adm certificate approve $i
                sleep 1
              done
              exit 1
            fi 
        register: result
        until:  result.rc == 0
        retries: 600
        delay: 5



      ##
      ##    For Openshift v4.2 we have to set the registry operator 
      ##    to managed in order for installation to complete with
      ##    all operator availability = true
      ##



      - name: "xtoph_ocp4 : postinstall-cluster : wait for configs.imageregistry for OCP < v4.3, approve CSRs as needed"
        run_once: true
        shell:
          cmd: |
            export KUBECONFIG={{ workshop_extras.ocp_creds_dir }}/auth/kubeconfig
            {{ oc_cmd }} get configs.imageregistry.operator.openshift.io/cluster 2>/dev/null
            if [[ $? != 0 ]]; then 
              for i in `{{ oc_cmd }} get csr | grep -i pending | awk '{print $1}'`; do 
                {{ oc_cmd }} adm certificate approve $i
                sleep 1
              done
              exit 1 
            else 
              exit 0 
            fi
        register: result
        until:  result.rc == 0
        retries: 600
        delay: 5
        when: 
          - xtoph_ocp4.ocp.version is version('4.3',operator='<')

      - name: "xtoph_ocp4 : postinstall-cluster : config NFS PV/PVC and set image-registry to managed for OCP < v4.3"
        run_once: true
        shell:
          cmd: |
            export KUBECONFIG="{{ xtoph_ocp4.ocp.creds_dir }}/auth/kubeconfig"
            {{ oc_cmd }} apply -f /usr/local/etc/workshop-registryPV.yaml
            {{ oc_cmd }} patch configs.imageregistry.operator.openshift.io/cluster --type merge -p '{"spec":{"storage":{"pvc":{"claim":""}}}}' 
            sleep 3
            {{ oc_cmd }} patch configs.imageregistry.operator.openshift.io/cluster --type merge -p '{"spec":{"managementState":"Managed"}}'
        when: 
          - xtoph_ocp4.ocp.version is version('4.3',operator='<')
          - xtoph_ocp4.bastion.nfs == true
          - xtoph_ocp4.bastion.workshop_materials == true



      ##
      ##    Now just watch for all clusteroperators ready
      ##    There can be cases when timing is just right, that
      ##    the results of 'get clusteroperators' can show all True.
      ##    But that is harmless.  This cluster is "mostly" ready
      ##    if this exits
      ##
    
    
    
      - name: "xtoph_ocp4 : postinstall-cluster : watch until availability for all clusteroperators is 'True', approve CSRs as needed"
        run_once: true
        shell:
          cmd: |
            export KUBECONFIG={{ workshop_extras.ocp_creds_dir }}/auth/kubeconfig
            {{ oc_cmd }} get clusteroperators --no-headers | awk '{print $3}' | grep -i false 
            if [[ $? == 0 ]]; then 
              for i in `{{ oc_cmd }} get csr | grep -i pending | awk '{print $1}'`; do 
                {{ oc_cmd }} adm certificate approve $i
                sleep 1
              done
              exit 1 
            else 
              exit 0 
            fi
        register: result
        until:  result.rc == 0
        retries: 600
        delay: 5

      - name: "xtoph_ocp4 : postinstall-cluster : final CSR approval check"
        run_once: true
        shell:
          cmd: |
            export KUBECONFIG={{ workshop_extras.ocp_creds_dir }}/auth/kubeconfig
            for i in `{{ oc_cmd }} get csr | grep -i pending | awk '{print $1}'`; do
              {{ oc_cmd }} adm certificate approve $i
              sleep 1
            done
        register: result


  vars:
    - oc_cmd: "/usr/local/bin/oc"
