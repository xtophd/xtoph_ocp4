


#
#    Summary:
#
#      This playbook customizes ISOs for installation of RHCOS
#      This playbook is considered "legacy" and should only be used for OCP 4.6 or older
#   



- delegate_to: "{{ xtoph_ocp4.bastion.host_fqdn }}"
  block:

      #
      #    NOTE:  RHEL 9 deprecated the genisoimage package and along with it
      #           the isoinfo utility.  So this command is no longer available
      #           to fetch an ISO image's volume id:
      #
      #             isoinfo -d -i {{ t_src_iso }} | grep 'Volume id:' | sed -e 's/Volume id: //g'
      #
      #           Instead, we will use the file command which appears to work for our needs
      #
      #             file -b {{ t_src_iso }} | egrep -o "rhcos[-._[:alnum:]]+"
      #

      - name: "xtoph_ocp4 : config-bastion-legacy-iso : package installation"
        throttle: 1
        yum: 
          name: xorriso 
          state: installed

      - name: "xtoph_ocp4 : config-bastion-legacy-iso : clean-up tmp directory {{ t_tmp }}"
        throttle: 1
        shell:
          cmd: |
            if [[ -d "{{ t_tmp }}" ]] ; then rm -rf {{ t_tmp }} ; fi
    
      - name: "xtoph_ocp4 : config-bastion-legacy-iso : create fresh iso work directory for each host"
        file: 
          path="{{ t_tmp_subdir }}" 
          mode="0755" 
          state=directory
    
      - name: "xtoph_ocp4 : config-bastion-legacy-iso : clone ISO source to temp workspace"
        throttle: "{{ xtoph_ocp4._throttle | int  }}"
        shell:
          cmd: |
            xorriso -osirrox on -indev "{{ t_src_iso }}" -extract / "{{ t_tmp_subdir }}"
     
      - name: "xtoph_ocp4 : config-bastion-legacy-iso : preserve ISO volume id"
        shell:
          cmd: |
            file -b {{ t_src_iso }} | egrep -o "rhcos[-._[:alnum:]]+"
        register: isoinfo

      - name: "xtoph_ocp4 : config-bastion-legacy-iso : DEBUG: ISO customization parameters"
        debug:
          msg:
          - "ISO Target        = {{ t_dest_iso }}"
          - "ISO LABEL ID      = {{ isoinfo.stdout }}"
          - "USB-STORAGE.DELAY = {{ xtoph_ocp4.rhcos.usb_delay }}"
          - "NIC Mode          = {{ xtoph_ocp4.rhcos.nic_mode }}"
          - "DNS               = {{ t_dns }}"
          - "RHCOS NET DEV     = {{ t_dev }}"
          - "RHCOS BLK DEV     = {{ xtoph_ocp4.rhcos.blk_dev }}"
          - "RHCOS DHCP        = {{ t_ip_dhcp }}"
          - "RHCOS STATIC      = {{ t_ip_static }}"
          - "RHCOS IGN URL     = {{ t_ignition_url }}"

      #
      #    NOTE:  because I am using http (not https), 
      #           I need to add "coreos.inst.insecure=yes" 
      #           to my list of kernel options
      #

      - name: "xtoph_ocp4 : config-bastion-legacy-iso : ISOLINUX default adjustment"
        replace:
          path: "{{ t_tmp_subdir }}/isolinux/isolinux.cfg"
          regexp: '^default.*$'
          replace: 'default linux'
 
      - name: "xtoph_ocp4 : config-bastion-legacy-iso : ISOLINUX timeout adjustment"
        replace:
          path: "{{ t_tmp_subdir }}/isolinux/isolinux.cfg"
          regexp: '^timeout\s+.*$'
          replace: 'timeout 15'
    
      - name: "xtoph_ocp4 : config-bastion-legacy-iso : ISOLINUX kargs customizations"
        replace:
          path: "{{ t_tmp_subdir }}/isolinux/isolinux.cfg"
          regexp: '(\s+)append(\s+.*)?$'
          replace: >
              \1append\2 rd.neednet=1 
              usb-storage.delay_use={{t_usbdelay}} 
              ip={{ t_ip }}
              {% if t_bond != "" %}bond={{ t_bond }}{% endif %}
              {% if xtoph_ocp4.ocp.version is version('4.3',operator='<') %}
              coreos.inst.image_url=http://{{ t_addr }}:{{ t_port }}/assets/{{ t_bios }}
              {% elif xtoph_ocp4.ocp.version is version('4.6',operator='<') %}
              coreos.inst.image_url=http://{{ t_addr }}:{{ t_port }}/assets/{{ t_metal }}
              {% endif %}
              coreos.inst.insecure=yes
              coreos.inst.install_dev={{ t_storage }}
              coreos.inst.ignition_url={{ t_ignition_url }}

      - name: "xtoph_ocp4 : config-bastion-legacy-iso : GRUB timeout adjustment"
        replace:
          path: "{{ t_tmp_subdir }}/EFI/redhat/grub.cfg"
          regexp: '^set timeout=.*$'
          replace: 'set timeout=15'

      - name: "xtoph_ocp4 : config-bastion-legacy-iso : GRUB kargs customizations"
        replace:
          path: "{{ t_tmp_subdir }}/EFI/redhat/grub.cfg"
          regexp: '(\s+)linux(\s+.*)?$'
          replace: >
              \1linux\2 rd.neednet=1 
              usb-storage.delay_use={{t_usbdelay}} 
              ip={{ t_ip }}
              {% if t_bond != "" %}bond={{ t_bond }}{% endif %}
              {% if xtoph_ocp4.ocp.version is version('4.3',operator='<') %}
              coreos.inst.image_url=http://{{ t_addr }}:{{ t_port }}/assets/{{ t_uefi }}
              {% elif xtoph_ocp4.ocp.version is version('4.6',operator='<') %}
              coreos.inst.image_url=http://{{ t_addr }}:{{ t_port }}/assets/{{ t_metal }}
              {% endif %}
              coreos.inst.insecure=yes
              coreos.inst.install_dev={{ t_storage }}
              coreos.inst.ignition_url={{ t_ignition_url }}

      - name: "xtoph_ocp4 : config-bastion-legacy-iso : for each host generate custom iso image"
        throttle: "{{ xtoph_ocp4._throttle | int  }}"
        shell:
          cmd: |
            cd {{ t_tmp_subdir }} 
            genisoimage -U -r -v -T -J -joliet-long        \
                        -V      "{{ isoinfo.stdout  }}"         \
                        -volset "{{ isoinfo.stdout  }}"         \
                        -A      "{{ isoinfo.stdout  }}"         \
                        -b      isolinux/isolinux.bin      \
                        -c      isolinux/boot.cat          \
                        -no-emul-boot                      \
                        -boot-load-size 4                  \
                        -boot-info-table                   \
                        -eltorito-alt-boot                 \
                        -e images/efiboot.img              \
                        -no-emul-boot                      \
                        -o {{ t_dest_iso }} . 

      - name: "xtoph_ocp4 : config-bastion-legacy-iso : update iso file permissions"
        file: 
          path: "{{ t_dest_iso }}"
          mode: "0644" 
          owner: matchbox
          group: matchbox
          state: file 

      - name: "xtoph_ocp4 : config-bastion-legacy-iso : clean-up temp directory {{ t_tmp }}"
        run_once: true
        shell:
          cmd: |
            if [[ -d "{{ t_tmp }}" ]] ; then rm -rf "{{ t_tmp }}" ; fi
        when: xtoph_ocp4._cleanup == True

  when:  inventory_hostname in xtoph_ocp4._cluster_bootstrap + xtoph_ocp4._cluster_masters + xtoph_ocp4._cluster_workers + xtoph_ocp4._cluster_sno

  vars:
    - t_tmp:         "/var/tmp/{{ xtoph_ocp4.ocp.clustername }}/iso"
    - t_tmp_subdir:  "{{ t_tmp }}/{{ inventory_hostname_short }}"
    - t_name:        "{{ inventory_hostname_short }}"
    - t_addr:        "{{ xtoph_ocp4.bastion.host_ip }}"
    - t_port:        "{{ xtoph_ocp4.bastion.matchbox_port }}"
    - t_clustername: "{{ xtoph_ocp4.ocp.clustername }}"
    - t_bond:        "{{ xtoph_ocp4.rhcos.bond_dev }}"
    - t_mac:         "{{ xtoph_ocp4.rhcos.nic_mac }}"

    - t_dns:         "{{ xtoph_ocp4.bastion.host_ip if xtoph_ocp4.bastion.dns == true else xtoph_ocp4.network.nameserver }}"
    - t_dev:         "{{ xtoph_ocp4.rhcos.nic_dev | regex_replace('^(.*):.*','\\1') }}"
    - t_ip_dhcp:     "{{t_dev }}:dhcp"
    - t_ip_static:   "{{ h_pubIP  }}::{{ xtoph_ocp4.network.gateway }}:{{ xtoph_ocp4.network.gateway }}:{{ inventory_hostname }}:{{ t_dev }}:none:{{ t_dns }}"
    - t_ip:          "{% if xtoph_ocp4.rhcos.nic_mode == 'dhcp' %}{{ t_ip_dhcp }}{% else %}{{ t_ip_static }}{% endif %}"

    - t_bios:        "{{ xtoph_ocp4.rhcos_assets.bios    | default('') }}"
    - t_uefi:        "{{ xtoph_ocp4.rhcos_assets.uefi    | default('') }}"
    - t_metal:       "{{ xtoph_ocp4.rhcos_assets.metal   | default('') }}"

    - t_ignition_url: "http://{{xtoph_ocp4.bastion.host_ip}}:{{xtoph_ocp4.bastion.matchbox_port}}/ignition?mac={{xtoph_ocp4.rhcos.nic_mac}}"

    - t_storage:     "{{ xtoph_ocp4.rhcos.blk_dev }}"
    - t_usbdelay:    "{{ xtoph_ocp4.rhcos.usb_delay }}"
    - t_src_iso:     "/var/lib/matchbox/assets/{{ xtoph_ocp4.rhcos_assets.iso }}"
    - t_dest_iso:    "/var/lib/matchbox/assets/{{ xtoph_ocp4.ocp.clustername }}-{{ inventory_hostname_short }}.iso"





