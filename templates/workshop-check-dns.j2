#!/bin/bash

##
## Include the lib-exercise functions
##

. $(dirname "$0")/lib-exercise.sh

##
## Load the kubeconfig
##

export KUBECONFIG={{ workshop_extras.ocp_creds_dir }}/auth/kubeconfig

##
## Some solutions used here come from:
##     https://access.redhat.com/solutions/3804501
##

echo "Workshop configuration details"
echo "------------------------------"
echo "Bastion IP address ............... {{ t_bastion_host_ip }}"
echo "Upstream DNS provider ............ {{ t_network_nameserver }}"
echo "Bastion DNS service enabled ...... {{ t_bastion_dns }}"
echo ""



echo "Check nodes: /etc/resolv.conf"
echo "-----------------------------"
for i in `oc get nodes -o custom-columns="Node Name:.metadata.name" --no-headers` ; do
    echo -n "$i: "
    ssh core@$i grep nameserver /etc/resolv.conf | awk '{ printf "%s ", $2 }'
    echo ""
done
echo ""

##
##
##

exercise_cmd "Check dns operator health" \
             "oc get clusteroperator dns"

##
##
##

exercise_cmd "Check dns pod health" \
             "oc get pod -n openshift-dns-operator"

##
##
##


##    Alternative, but too much info for now
#exercise_cmd "Check dns pod health" \
#             "oc get all -n openshift-dns-operator"

##
##
##

exercise_cmd "Check dns service health" \
             "oc get service -n openshift-dns"

##
##
##

exercise_cmd "List dns pod IPs and Node IPs" \
             "oc get pods -n openshift-dns -o custom-columns='Pod Name:.metadata.name,Pod IP:.status.podIP,Node IP:.status.hostIP,Status:.status.phase'"

##
##
##

echo "Check pods (apiserver): /etc/resolv.conf"
echo "----------------------------------------"
export PODS=`oc get pods -o=jsonpath="{.items[*].metadata.name}" -n openshift-apiserver`
for pod in $PODS; do 
    echo -n "$pod: "
    oc exec $pod -n openshift-apiserver -- grep nameserver /etc/resolv.conf 2>/dev/null | awk '{ printf "%s ", $2 }'
    echo ""
done 
echo ""

##
##
##

exercise_cmd  "Display dns operator configmap" \
              "oc get configmap/dns-default -n openshift-dns -o yaml"

